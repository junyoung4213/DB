package _06_SavePointEx;

import java.sql.*;

/*
Rollback을 하게 되면 Commit을 하지 않은 기존의 모든 Query를
복원하게 된다.
하지만 이중에는 성공이 된 것도 있기 때문에 
여러 번의 Query중에 중간중간 SavePoint를 저장해 놓으면
전부 복원하지 않고 해당 지점인 SavePoint 상태까지만 Rollback
할 수 있다.
*/
public class SavePointEx {
	static {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		Connection con = null;
		PreparedStatement selectPsmt = null;
		PreparedStatement updatePsmt = null;
		ResultSet rs = null;
		
		try {
			con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "bitcamp", "bitcamp");
			
			// SavePoint를 사용하기 위해 자동커밋을 false한다
			con.setAutoCommit(false);
			
			// savepoint테이블을 미리 생성하자
			
			String selectQuery = "SELECT id, total FROM savepoint" 
					+ "\r\n" + "WHERE total > ?";
			String updateQuery = "UPDATE savepoint SET total = ?"
					+ "\r\n" + "WHERE id = ?";
			
			con.setAutoCommit(true);
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(rs!=null) rs.close();
				if(updatePsmt!=null) updatePsmt.close();
				if(selectPsmt!=null) selectPsmt.close();
				if(con!=null) con.close();				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
