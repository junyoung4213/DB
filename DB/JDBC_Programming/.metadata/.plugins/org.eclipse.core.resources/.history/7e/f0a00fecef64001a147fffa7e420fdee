package _07_ConnectionPool;

import java.sql.Connection;
import java.util.ArrayList;

/*
사전에 미리 Connection객체들을 생성해놓고
사용자(Client App)이 요청하면
레퍼런스를 전달하고
다 사용했으면 다시 반납받는 
Connection 객체를 관리하는 클래스
*/
public class ConnectionPool {
	static {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	ArrayList<Connection> free; // 미사용인 Connection 저장
	ArrayList<Connection> used; // 사용중인 Connection 저장
	String url; // Oracle 서버 접속 주소
	String user; // id
	String password; // password
	int initialCons = 0; // 초기 커넥션 수
	int maxCons = 0; // 최대 커넥션 수
	int numCons = 0; // 현재 커넥션 수
	/*
	 * 생성자를 private 주면 외부에서 new ConnectionPool()을 호출할 수가 없다. 
	 * 왜냐하면 new ConnectionPool() 할 때 생성자 메서드가 호출되야 하는데 
	 * private이니까 아예 외부에서는 객체 생성을 못하게 막을 수 있다. 
	 * 이 때는 무조건 ConnectionPool 클래스 내에서 객체를 생성해야 한다.
	 */
	private ConnectionPool(String url, String user, String password, int initialCons, int maxCons, int numCons) {

	}

}
